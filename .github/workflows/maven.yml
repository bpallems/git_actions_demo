# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    
    - uses: actions/checkout@v2    
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Copy java artifact to current dir
      run: cp $GITHUB_WORKSPACE/webapp/target/webapp.war . 
      
    - name: execute ant script to updated version
      run: |
       cat build.tag
       version_tag=`cat build.tag | grep -i "VERSION" | cut -d'=' -f2`
       echo $version_tag
       values=(${version_tag//./ })
       echo build.number: ${values[3]}
       let values[3]=${values[3]}+1
       echo build.number: ${values[3]}
       cat << EOF > build.tag
       TAG_VERSION=${values[0]}.${values[1]}.${values[2]}.${values[3]}
       EOF
       cat build.tag
       cat build.tag >> $GITHUB_ENV
       echo $TAG_VERSION
       git config --global user.name 'bapllems'
       git config --global user.email 'mrpratap@gmail.com'
       git commit -am "auto commit: version update in build.tag"
       git push
       #git commit -m "Add changes" -a
       #git push
       #env:
       #VERSION_TAG: ${values[0]}.${values[1]}.${values[2]}.${values[3]}
         
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: | 
          bhanudocker3315/regapp_gita:latest
          bhanudocker3315/regapp_gita:${{ env.TAG_VERSION }}
        
    - name: kube config
      run: |
        mkdir ${HOME}/.kube
        echo ${{ secrets.KUBE_CONFIG }} | base64 --decode > ${HOME}/.kube/config
        cat ${HOME}/.kube/config
    - name: 'Kustomize install'
      uses: imranismail/setup-kustomize@v1
    - name: 'Kustomize build'
      run: |
        kustomize edit set image bhanudocker3315/regapp_gita:${{ env.TAG_VERSION }} > new_config.yml
        cat new_config.yml
        kustomize build .
        
        
        
        
